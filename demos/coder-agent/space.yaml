# Coder Agent Demo Space - With Approval Required for File Modifications
space:
  id: coder-demo
  name: "Coder Agent Demo"
  description: "Coding assistant that requires human approval for file modifications"
  default_participant: human

participants:
  # Human participant with full capabilities (can approve proposals)
  human:
    tokens: 
      - human-token
    capabilities:
      - kind: "*"  # Full capabilities including proposal approval
      
  # Coder agent with limited capabilities - creates proposals for file modifications
  coder-agent:
    type: local
    command: "node"
    args: ["../../sdk/typescript-sdk/agent/dist/index.js", "--gateway", "ws://localhost:${PORT}", "--space", "coder-demo", "--token", "coder-token", "--id", "coder-agent"]
    auto_start: true
    tokens:
      - coder-token
    capabilities:
      - kind: "chat"
      - kind: "reasoning/*"
      - kind: "mcp/proposal"
      - kind: "mcp/response"
      - kind: "mcp/request"
        payload:
          method: "!tools/call"
    env:
      # OPENAI_API_KEY is inherited from environment automatically
      OPENAI_MODEL: "gpt-5"
      # OPENAI_BASE_URL: "..."
  
  # MCP Bridge for file system access - executes approved proposals
  mcp-fs-bridge:
    type: local
    command: "node"
    args: ["../../bridge/bin/mew-bridge.js", "--gateway", "ws://localhost:${PORT}", "--space", "coder-demo", "--token", "mcp-bridge-token", "--participant-id", "mcp-fs-bridge", "--mcp-command", "npx", "--mcp-args", "@modelcontextprotocol/server-filesystem,.", "--mcp-cwd", "./workspace"]
    auto_start: true
    tokens:
      - mcp-bridge-token
    capabilities:
      - kind: "mcp/request"
      - kind: "mcp/response"
      - kind: "mcp/notification"

  # Auto-fulfiller for proposals (for demonstration/testing)
  auto-fulfiller:
    type: local
    command: "node"
    args: ["./auto-fulfiller.js", "--gateway", "ws://localhost:${PORT}", "--space", "coder-demo", "--token", "fulfiller-token", "--participant-id", "auto-fulfiller"]
    auto_start: false  # Disabled for manual testing
    tokens:
      - fulfiller-token
    capabilities:
      - kind: "mcp/proposal"  # Can see proposals
      - kind: "mcp/request"   # Can execute approved operations
      - kind: "mcp/response"  # Can respond to requests
      - kind: "chat"

defaults:
  capabilities:
    - kind: "chat"  # Everyone can chat by default
